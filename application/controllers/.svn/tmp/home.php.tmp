<?php
class Home extends CI_Controller {
   
   var $base;
   var $css;
   
	  function __construct()
       {
        parent::__construct();	
		$this->base = $this->config->item('base_url');
		$this->css = "style.css";
		$this->load->helper('parameter');
		$this->load->database();
		$this->load->helper('form');
		$this->load->library('session');
		$this->load->library('pagination');
		$this->load->model('home_model');
		$this->load->helper('url');
		$this->load->helper('menu');
		$this->load->library('image_lib');
		$this->load->library('form_validation');
		$this->load->library('email');
		$this->load->helper('download');
		$this->load->helper('file');
		
	}
	
	function index()
	{
	   $data['base'] = $this->base;
	   $data['css'] = $this->css;
	   $data['menu']="index";

	   $data['msg']='0';
	   
	   $this->form_validation->set_rules('email','Email','required|valid_email');
		if($this->form_validation->run()==TRUE)
		{
			$filename=get_filenames($this->base."newsletter/");
			//print_r($filename);
			$data=file_get_contents($this->base."newsletter/".$filename[0]);
			$name="newsletter.pdf";
			force_download($name,$data);
			$data['val']="1";
		}
		else
		{
			$data['val']="0";
			/*echo "<script type=\"text/javascript\">alert(\"Please specify proper email id\")</script>";*/
		 }

		$this->load->view('header',$data);
		$this->load->view('home_new',$data);
		$this->load->view('footer',$data);
		
	}
	function signin()
	{
	   $data['base'] = $this->base;
	   $data['css'] = $this->css;
	   $data['message']="";
	   $data['menu']="";
	   
	   $this->form_validation->set_rules('email', 'E-mail Id', 'callback_check|email');
	   $this->form_validation->set_rules('password', 'Password', 'callback_check');
	   $this->load->view('header',$data);
	   
	   if ($this->form_validation->run() == TRUE)
	   {
	   $insert['email']=$this->input->post('email');
	   $insert['password']=base64_encode($this->input->post('password'));
	   
	   $login=$this->home_model->signin($insert);
	   $no=$login->num_rows;
	   
	   if($no>0)
	   {
		   
		   foreach($login->result() as $log)
		   {
		   }
		 
		  $this->session->set_userdata('memberid', $log->memberid);
		  $this->session->set_userdata('name', $log->firstname);
		  
		  redirect('index.php/home', 'refresh');
		  
	     // $this->load->view('home',$data);
       }
	   else
		{
			$data['message']="SORRY..You are not a member of MSP.Please create an account.";
			$data['menu']="signin";
			$this->load->view('signin',$data);
			
		}
       }
		else
		{
		    $data['message']="SORRY..You are not a member of MSP.Please create an account.";

			$this->load->view('signin',$data);
			
		}
		
		
		$this->load->view('footer',$data);
	}
	function createaccount()
	{
	   $data['base'] = $this->base;
	   $data['css'] = $this->css;
	   $data['menu']="";
	   
	   
		$this->load->view('header',$data);
		$this->load->view('createaccount',$data);
		$this->load->view('footer',$data);
	}
	function forgotpassword()
	{
	   $data['base'] = $this->base;
	   $data['css'] = $this->css;
	   $data['message'] ="";
	   $data['menu']="";
	   $this->load->library('email');

		$this->form_validation->set_rules('email', 'E-mail Id', 'valid_email');
		$this->load->view('header',$data);
		if ($this->form_validation->run() == TRUE)
		{
			$email=$this->input->post('email');
		    $va=$this->home_model->view("member",$email);
			$no=$va->num_rows;
			foreach($va->result() as $vaa)
			{
			}
			$pass=base64_decode($vaa->password);
			
			if($no>0)
			{
				
				$this->email->from('pharmacy@gmail.com', 'MSP');
				$this->email->to($email);
				$this->email->cc('tintu.primemove@gmail.com');
				
                 $message="Your password is ".$pass;
				$this->email->subject('Password recovery from Main Street Pharmacy');
				$this->email->message($message);

				$this->email->send();

				$this->load->view('signin',$data);
				
			}
		}
		
		else
		{
		$this->load->view('forgotpassword',$data);
	    }
		$this->load->view('footer',$data);
		
	}
	function newpassword()
	{
	   $data['base'] = $this->base;
	   $data['css'] = $this->css;
	   $data['menu']="";
	  
		
		
		$this->form_validation->set_rules('password', 'Password', 'required|matches[repassword]|min_length[7]|max_length[20]');
		$this->form_validation->set_rules('repassword', 'Re Enter Password', 'required');
		
		$this->load->view('header',$data);
		if ($this->form_validation->run() == TRUE)
		{
			$password=$this->input->post('password');
			$repassword=$this->input->post('repassword');
			$va=$this->home_model->updatepassword($password);
			$this->load->view('newpasswordsecurity',$data);
			
		}
		else
		{
			$this->load->view('newpassword',$data);
	    }
		
		
		$this->load->view('footer',$data);
		
	}
	function accountconfirmation()
	{
	   $data['base'] = $this->base;
	   $data['css'] = $this->css; 
	   $data['menu']="";
	   $data['message']="";
	   
	   
	  
				$data['firstname']=$this->input->post('firstname');
				$data['lastname']=$this->input->post('lastname');
				$data['location']=$this->input->post('loc');
				$data['email']=$this->input->post('emailid');
				$data['passconf']=$this->input->post('passconf');
				$data['securityanswer']=$this->input->post('securityanswer');
				$data['healthcard']=$this->input->post('healthcard');
				$data['accept']=$this->input->post('healthcard');
	  
			$this->form_validation->set_rules('firstname', 'First Name', 'callback_firstname_check');
			$this->form_validation->set_rules('lastname', 'Last Name', 'callback_lastname_check');
			$this->form_validation->set_rules('loc', 'Location', 'callback_loc_check');
			$this->form_validation->set_rules('emailid', 'E-mail id', 'required|valid_email');
			$this->form_validation->set_rules('pwd', 'Password', 'trim|required|min_length[7]|max_length[20]|required|matches[passconf]');
			$this->form_validation->set_rules('passconf', 'Confirm Password', 'trim|required');
			$this->form_validation->set_rules('securityanswer', 'Security Answer', 'required');
			
		//  $this->form_validation->set_rules('accept', 'I Accept. ', 'required');
	  
				
				if($this->form_validation->run() == FALSE)
				{
					$this->load->view('header',$data);
					$this->load->view('createaccount',$data);
					$this->load->view('footer',$data);
				}
				elseif($this->input->post('addBtn')=="Submit")
				{
						$insert['firstname']=$this->input->post('firstname');
						$insert['lastname']=$this->input->post('lastname');
						$insert['location']=$this->input->post('loc');
						$email=$insert['email']=$this->input->post('emailid');
						$password=$insert['password']=base64_encode($this->input->post('pwd'));
						$insert['securityquest']=$this->input->post('ques');
						$insert['securityanswer']=md5($this->input->post('securityanswer'));
						$insert['dob']=$this->input->post('year')."-".$this->input->post('month')."-".$this->input->post('date');
						$insert['date']=date('Y-m-d');
						$insert['sex']=$this->input->post('sex');
						$insert['cardno']=$this->input->post('healthcard');
			
						    
						   $mb= $this->db->get_where('member', array('email' => $email));
						   if(($mb->num_rows)>0)
						   {
							   $data['message']="email id is already existed";
							   $this->load->view('header',$data);
					           $this->load->view('signin',$data);
					           $this->load->view('footer',$data);
							   
						   }
						   else
						   {
						   
							$data['member']=$this->db->insert('member', $insert); 
							if(!empty($data['member']))
							{
								
							$this->email->from('pharmacy@gmail.com', 'MSP');
							$this->email->to($email);
							$this->email->cc('tintu.primemove@gmail.com');
							
							$message="Your account is created in MSP";
							$this->email->subject('Account confirmation from Main Street Pharmacy');
							$this->email->message($message);

							$this->email->send();
							
							$insert['email']=$email;
							$insert['password']=$password;
							   
							$login=$this->home_model->signin($insert);
							$no=$login->num_rows;
							
							   
							   if($no>0)
							   {
								   
								   foreach($login->result() as $log)
								   {
								   }
								 
								  $this->session->set_userdata('memberid', $log->memberid);
								  $this->session->set_userdata('name', $log->firstname);
								  						  
								}
		                    }
							$this->load->view('header',$data);
							$this->load->view('accountconfirmation',$data);
							$this->load->view('footer',$data);
					        }
					
					
				}
		
	}
	
	
	function getkey()
	{
	   
	   
	      $id=$this->input->post('queryString');
	        
			if($id!="Pharmacy Name")
			{
	    	$getp=$this->home_model->getpharmacy($id);
			foreach($getp->result() as $get)
			{
				
			}
			
			 $data['city']=$get->city;
			 $data['state']=$get->state;
			 $data['pharmacyphone']=$get->phone;
			
		    }
		
		
		
	}
	
	function cosultation()
	{
		 $data['base'] = $this->base;
	     $data['css'] = $this->css;
		 $data['menu']="info";
		
	    $this->load->view('header',$data);
		$this->load->view('cosultation',$data);
		$this->load->view('footer',$data);
	}
	
		function contactus()
	{
		 $data['base'] = $this->base;
	     $data['css'] = $this->css;
		 $data['menu']="";
		
	    $this->load->view('header',$data);
		$this->load->view('contactus',$data);
		$this->load->view('footer',$data);
	}
	
		function privacy()
	{
		 $data['base'] = $this->base;
	     $data['css'] = $this->css;
		 $data['menu']="";
		
	    $this->load->view('header',$data);
		$this->load->view('privacy',$data);
		$this->load->view('footer',$data);
	}
	
	
	
	
	function check($str)
	{
		$values=array("First name","Initial","Last name","Date of birth","Phone number","Select your medication","Prescriber’s Name","Rx number","Pharmacy Name","E-mail id","Select your Pharmacy");
	
		if(in_array($str,$values))
		{
			$this->form_validation->set_message('check', 'The %s field is required');
			return FALSE;
			
		}
		else
		{
			return TRUE;
			
		}
	
		
	}
	//Member signin functions follows   
	
	function firstname_check($str)
	{
		if ($str == 'First name')
		{
			$this->form_validation->set_message('firstname_check', 'The %s field must fill');
			return FALSE;
		}
		else
		{
			return TRUE;
		}
	}
	
	function lastname_check($str)
	{
		if ($str == 'Last name')
		{
			$this->form_validation->set_message('lastname_check', 'The %s field must fill');
			return FALSE;
		}
		else
		{
			return TRUE;
		}
	}
	
	function loc_check($str)
	{
		if ($str == 'Location')
		{
			$this->form_validation->set_message('loc_check', 'The %s field must fill');
			return FALSE;
		}
		else
		{
			return TRUE;
		}
	}
	
	function emailid_check($str)
	{
		if ($str == 'E-mail id')
		{
			$this->form_validation->set_message('emailid_check', 'The %s field must fill');
			return FALSE;
		}
		else
		{
			return TRUE;
		}
	}
	
	function pwd_check($str)
	{
		if ($str == 'Password')
		{
			$this->form_validation->set_message('pwd_check', 'The %s field must fill');
			return FALSE;
		}
		else
		{
			return TRUE;
		}
	}
	
	function passconf_check($str)
	{
		if ($str == 'Confirm Password')
		{
			$this->form_validation->set_message('passconf_check', 'The %s field must fill');
			return FALSE;
		}
		else
		{
			return TRUE;
		}
	}
	function signout()
	{
	   $data['base'] = $this->base;
	   $data['css'] = $this->css;
	   $data['menu']="home";
	   	 $data['msg']='0';
	   
	   $this->form_validation->set_rules('email','Email','required|valid_email');
		if($this->form_validation->run()==TRUE)
		{
			$filename=get_filenames($this->base."newsletter/");
			//print_r($filename);
			$data=file_get_contents($this->base."newsletter/".$filename[0]);
			$name="newsletter.pdf";
			force_download($name,$data);
			$data['val']="1";
		}
		else
		{
			$data['val']="0";
			/*echo "<script type=\"text/javascript\">alert(\"Please specify proper email id\")</script>";*/
		 }
	  
		$this->session->unset_userdata('memberid');
		$this->session->unset_userdata('name');
		
		$this->load->view('header',$data);
		$this->load->view('home_new',$data);
		$this->load->view('footer',$data);
		
	}

/* Terms and condition */

function terms()
	{
	   $data['base'] = $this->base;
	   $data['css'] = $this->css;
	   $data['menu']="";
	  
		
		
		$this->load->view('header',$data);
		$this->load->view('terms',$data);
		$this->load->view('footer',$data);
		
	}
/* Shipping Information */

function shipping()
	{
	   $data['base'] = $this->base;
	   $data['css'] = $this->css;
	   $data['menu']="";
	  
		
		
		$this->load->view('header',$data);
		$this->load->view('shipping',$data);
		$this->load->view('footer',$data);
		
	}
function store_locator($id="")
{
	$data['base'] = $this->base;
	$data['css'] = $this->css;
	$data['menu']="home";
	$data['pharmacys']=$this->home_model->getpharmacy();
	
/*
	$data['state'] = $this->home_model->states();
	$data['city'] = $this->home_model->city($id);
*/
	$this->load->view('header',$data);
	$this->load->view('store_locator',$data);
	$this->load->view('footer',$data);
}
function store_details()
{
	$data['base'] = $this->base;
	$data['css'] = $this->css;
	$data['menu']="";
	
	$this->load->view('header',$data);
	$this->load->view('store_details',$data);
	$this->load->view('footer',$data);
}
function view_all_comments($start=0)
{
	$data['base'] = $this->base;
	$data['css'] = $this->css;
	$data['menu']="";
	
		$this->limit=4;
		$page['start']=intval($start);
		$page['count']=0; 
		$page['limit'] = $this->limit; 
		$data['feedback_lst']=$this->home_model->list_rec('review',$page); 
		//print_r($data['feedback_lst']['result']);
		$page['count']=1; 
		$data['feedback_count']=$this->home_model->list_rec('review',$page);
		 
		$config['prev_link'] = 'Previous'; 
		$config['next_link'] = 'Next'; 
		 
		$config['base_url']=$this->base.'index.php/home/view_all_comments/'; 
		$config['total_rows']=$data['feedback_count']['totalrows'];
		$config['per_page']=$this->limit; 
		$this->pagination->initialize($config);
		$data['link']= $this->pagination->create_links();
	//	print_r($data['link']);
	
	$this->load->view('header',$data);
	$this->load->view('feedback',$data);
	$this->load->view('footer',$data);
}
}
/* End of file home.php */
/* Location: ./system/application/controllers/home.*/
